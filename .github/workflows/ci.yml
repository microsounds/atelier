name: CI
on:
  push:
    paths:
    - .github/workflows/*
    - .profile
    - .bashrc
    - .local/bin/*
    - .once.d/*
    - Scripts/*

jobs:
  Install:
     runs-on: ubuntu-latest
     container: debian:bullseye
     steps:
       - name: Install prerequisite software
         run: apt-get update && apt-get install -y git gnupg1 wget sudo
       - name: Checkout dotfiles and bootstrap system
         run: |
           git clone --bare \
             "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY" ~/.config/meta
           git --git-dir=$HOME/.config/meta --work-tree=$HOME \
             reset $GITHUB_SHA --hard
       - name: Run post-install system config scripts in order
         shell: bash -le {0}
         env:
           TERM: rxvt
         run: yes n | post-install
       - name: Assert and test selected components of the shell environment
         shell: bash -le {0}
         env:
           TERM: rxvt
         run: |
           GIT_WORK_TREE="$HOME" GIT_DIR="$HOME/.config/meta" path-gitstatus -p
           fgrep 'stdc.syntax' < ~/.local/share/nano/c.nanorc
           colors
           cpp -P <<- EOF
               #include <colors/nightdrive.h>
           EOF
           twopass ffmpeg -loglevel quiet -s 1920x1080 -t 0.2 -f rawvideo \
             -i /dev/urandom -c:v libvpx -b:v 100M -an noise.webm
           mpv --vo=null noise.webm
           screenfetch
       - name: Stress test nano_overlay and it's dependencies
         shell: bash -le {0}
         env:
           TERM: rxvt
           EXTERN_EDITOR: cat
         run: |
           for f in $(seq 1024 $((1024 * 6)) | shuf | tail -n 100); do
             SECRET="$f tapioca milk teas >â€¿<"
             mkdir -p ~/.ssh
             ssh-keygen -q -f ~/.ssh/id_rsa -t rsa -b $f -N '' -m pem
             echo "$SECRET" > ok
             yes y | nano-overlay -j ok || exit 1
             { xz -d | tar -xO enc | file -; } < ok | fgrep 'openssl' || exit 1
             nano-overlay -j ok | fgrep "$SECRET" || exit 1
             rm -rf ~/.ssh
           done && printf '\e[1;30;102m %s \e[0m\n' 'ALL TESTS OK'
